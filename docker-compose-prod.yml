version: "3.8"
services:
  strapi:
    container_name: strapi
    build: 
        context: Dockerfile.prod
        args:
          NODE_ENV: production
    image: strapi:latest
    restart: unless-stopped
    env_file: 
      - .env
    environment:
      NODE_ENV: production
      DATABASE_CLIENT: postgres
      DATABASE_HOST: strapiDB
      DATABASE_PORT: 5432
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
    volumes:
      # Remove source code volumes for production security
      - ./public/uploads:/opt/app/public/uploads
      - strapi_data:/opt/app/.tmp
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      - strapiDB
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1337/_health"]
      interval: 30s
      timeout: 10s
      retries: 3

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64
    restart: unless-stopped
    env_file:
      - .env
    image: postgres:16.0-alpine
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./strapi-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - strapi

volumes:
  strapi_data:

networks:
  strapi:
    name: strapi
    driver: bridge
